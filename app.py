from flask import Flask, request, render_template
import openai
import os

app = Flask(__name__)

# โ ุงูุฎูุงุฑ 1: ุชุญููู ูู ูุชุบูุฑ ุจูุฆุฉ (ุขูู)
api_key = os.getenv("YOUR_OPENAI_API_KEY")

# โ ุงูุฎูุงุฑ 2: ุฃู ุงูุชุจูู ูุจุงุดุฑุฉ ุจุดูู ูุคูุช (ุบูุฑ ุขูู ููุงุณุชุฎุฏุงู ุงูุนุงู)
# api_key = "sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"

# ุชุญูู ุฃู ุงูููุชุงุญ ููุฌูุฏ ูุนูุงู
if not api_key:
    raise ValueError("โ ูู ูุชู ุงูุนุซูุฑ ุนูู ููุชุงุญ OpenAI API. ูุฑุฌู ุชุนูููู ูู ูุชุบูุฑ ุงูุจูุฆุฉ YOUR_OPENAI_API_KEY ุฃู ุฅุฏุฎุงูู ูุจุงุดุฑุฉ.")

client = openai.OpenAI(api_key=api_key)

@app.route('/')
def index():
    return render_template('ONE.html')

@app.route('/ุดุฑุญ', methods=['POST'])
def ุดุฑุญ():
    user_code = request.form['code']

    prompt = f"""ุฃูุช ูุณุงุนุฏ ุฎุจูุฑ ูู ุงูุจุฑูุฌุฉ. ูุฑุฌู ุดุฑุญ ุงูููุฏ ุงูุชุงูู ุณุทุฑูุง ุจุณุทุฑุ ูุจูุบุฉ ุนุฑุจูุฉ ูุจุณุทุฉุ ูุน ุชุจุณูุท ุงูููุงููู ุงูุจุฑูุฌูุฉ ูุฐูุฑ ูุธููุฉ ูู ุฌุฒุก ูู ุงูููุฏุ ุณูุงุก ูุงู ุจูุบุฉ Python ุฃู ุฃู ูุบุฉ ุฃุฎุฑู. ุงูููุฏ:\n\n{user_code}\n\nุงูุดุฑุญ:"""

    try:
        response = client.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[{"role": "user", "content": prompt}],
            temperature=0.3
        )
        explanation = response.choices[0].message.content
    except Exception as e:
        explanation = f"ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุดุฑุญ: {str(e)}"

    return f"""
        <h2>๐ ุงูุดุฑุญ:</h2>
        <pre>{explanation}</pre>
        <br><a href="/">โฌ๏ธ ุฑุฌูุน</a>
    """

if __name__ == '__main__':
    app.run(debug=True)
